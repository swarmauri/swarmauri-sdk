"""
autoapi_authn.orm
=================

Package-level bootstrap for the authentication serviceâ€™s persistence layer.

Exports
-------
Base       : Declarative base for all models in **autoapi_authn**.
metadata   : Shared SQLAlchemy `MetaData` with a sane naming-convention.
router     : FastAPI router auto-generated by AutoAPI for all auth-tables.
autoapi    : The `AutoAPI` instance used to produce *router*.

Notes
-----
*   All mix-ins (GUIDPk, Timestamped, TenantBound, etc.) live in
    *autoapi.v2.mixins* and are imported **only** by `tables.py`.
*   Importing this module has the side-effect of importing
    `autoapi_authn.orm.tables`, so every model class is registered with
    the declarative base **before** AutoAPI introspects the metadata.
"""

from __future__ import annotations

from autoapi.v2 import AutoAPI, Base
from auto_authn.v2.orm.tables import (
    Tenant,
    User,
    Client,
    ApiKey,
    Service,
    ServiceKey,
)
from ..db import get_async_db  # same module as before

# ----------------------------------------------------------------------
# 3.  Build AutoAPI instance & router
# ----------------------------------------------------------------------
crud_api = AutoAPI(
    base=Base,
    include={Tenant, User, Client, ApiKey, Service, ServiceKey},
    get_async_db=get_async_db,
)

__all__ = ["crud_api"]

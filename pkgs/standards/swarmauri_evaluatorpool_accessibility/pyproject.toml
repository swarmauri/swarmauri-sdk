[project]
name = "swarmauri_evaluatorpool_accessibility"
version = "0.1.2"
description = "A package providing accessibility and readability evaluators for SwarmAuri"
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/swarmauri/swarmauri-sdk/pkgs/standards/swarmauri_evaluatorpool_accessibility/"
requires-python = ">=3.10,<3.13"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Software Development :: Quality Assurance"
]
authors = [
    { name = "SwarmAuri Team", email = "info@swarmauri.com" }
]
keywords = [
    "accessibility",
    "readability",
    "evaluator",
    "swarmauri",
    "flesch-kincaid",
    "gunning-fog",
    "coleman-liau",
    "automated-readability-index",
    "flesch-reading-ease",
    "text-analysis",
    "nlp"
]
dependencies = [
    "swarmauri_core",
    "swarmauri_base",
    "swarmauri_standard",
    "nltk",
    "beautifulsoup4",
    "markdown",
    "pydantic",
]

[tool.uv.sources]
swarmauri_core = { workspace = true }
swarmauri_base = { workspace = true }
swarmauri_standard = { workspace = true }

[project.entry-points.'swarmauri.evaluator_pools']
AccessibilityEvaluatorPool = "swarmauri_evaluatorpool_accessibility:AccessibilityEvaluatorPool"

[project.entry-points.'swarmauri.evaluators']
AutomatedReadabilityIndexEvaluator = "swarmauri_evaluatorpool_accessibility:AutomatedReadabilityIndexEvaluator"
ColemanLiauIndexEvaluator = "swarmauri_evaluatorpool_accessibility:ColemanLiauIndexEvaluator"
FleschKincaidGradeEvaluator = "swarmauri_evaluatorpool_accessibility:FleschKincaidGradeEvaluator"
FleschReadingEaseEvaluator = "swarmauri_evaluatorpool_accessibility:FleschReadingEaseEvaluator"
GunningFogEvaluator = "swarmauri_evaluatorpool_accessibility:GunningFogEvaluator"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
norecursedirs = ["combined", "scripts"]
markers = [
    "test: standard test",
    "unit: Unit tests",
    "i9n: Integration tests",
    "r8n: Regression tests",
    "timeout: mark test to timeout after X seconds",
    "xpass: Expected passes",
    "xfail: Expected failures",
    "acceptance: Acceptance tests",
    "perf: Performance tests that measure execution time and resource usage",
]
timeout = 300
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_default_fixture_loop_scope = "function"

[dependency-groups]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.24.0",
    "pytest-xdist>=3.6.1",
    "pytest-json-report>=1.5.0",
    "python-dotenv",
    "requests>=2.32.3",
    "flake8>=7.0",
    "pytest-timeout>=2.3.1",
    "ruff>=0.9.9",
    "pytest-benchmark>=4.0.0",
]
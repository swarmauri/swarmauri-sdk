"""init

Revision ID: ae1de73e4143
Revises: 
Create Date: 2025-06-10 15:47:23.176181

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ae1de73e4143'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    status_enum = sa.Enum(
        "pending",
        "dispatched",
        "running",
        "success",
        "failed",
        "cancelled",
        name="status",
        create_type=False,
    )
    status_enum.create(op.get_bind())

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "task_runs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("pool", sa.String(), nullable=True),
        sa.Column("task_type", sa.String(), nullable=True),
        sa.Column("status", status_enum, nullable=True),
        sa.Column("payload", sa.JSON(), nullable=True),
        sa.Column("result", sa.JSON(), nullable=True),
        sa.Column("deps", sa.JSON(), nullable=False),
        sa.Column("edge_pred", sa.String(), nullable=True),
        sa.Column("labels", sa.JSON(), nullable=False),
        sa.Column("config_toml", sa.String(), nullable=True),
        sa.Column("artifact_uri", sa.String(), nullable=True),
        sa.Column("started_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("finished_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task_runs")
    sa.Enum(name="status").drop(op.get_bind())
    # ### end Alembic commands ###

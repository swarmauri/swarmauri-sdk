[project]
name = "peagen"
version = "0.1.2.dev3"
description = "Swarmauri's Peagan - An AI-driven contextual, dependency-based scaffolding tool for rapid content generation."
authors = [{ name = "Jacob Stewart", email = "jacob@swarmauri.com" }]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/swarmauri/swarmauri-sdk/pkgs/standards/peagen/peagen"
requires-python = ">=3.10,<3.13"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "python-dotenv",
    "jinja2",
    "inflect",
    "typer",
    "swarmauri_core",
    "swarmauri_base",
    "swarmauri_standard",
]


[tool.uv.sources]
swarmauri_core = { workspace = true }
swarmauri_base = { workspace = true }
swarmauri_standard = { workspace = true }

[tool.pytest.ini_options]
norecursedirs = ["combined", "scripts"]
markers = [
    "test: standard test",
    "unit: Unit tests",
    "i9n: Integration tests",
    "r8n: Regression tests",
    "timeout: mark test to timeout after X seconds",
    "xpass: Expected passes",
    "xfail: Expected failures",
    "acceptance: Acceptance tests",
    "perf: Performance tests that measure execution time and resource usage",
]
timeout = 300
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_default_fixture_loop_scope = "function"

# [project.entry-points.'swarmauri.workflows']
# Ptree_Dag = "Ptree_Dag:PtreeDag"

[project.scripts]
peagen = "peagen.cli:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.24.0",
    "pytest-xdist>=3.6.1",
    "pytest-json-report>=1.5.0",
    "python-dotenv",
    "requests>=2.32.3",
    "flake8>=7.0",
    "pytest-timeout>=2.3.1",
    "ruff>=0.9.9",
    "pytest-benchmark>=4.0.0",
]

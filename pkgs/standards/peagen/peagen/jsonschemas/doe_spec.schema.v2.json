{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id":     "https://example.com/schema/doe_spec.schema.json",

  "title":   "DOE_SPEC",
  "$comment": "Design-of-Experiments specification – schema v2 (2025-06-19)",
  "type":    "object",

  "required": ["version", "meta"],
  "additionalProperties": true,

  "properties": {
    "version": {
      "type": "string",
      "enum": ["v2"],
      "$comment": "Bump to a new major version for breaking schema changes."
    },

    "meta": {
      "type": "object",
      "required": ["name"],
      "additionalProperties": false,
      "patternProperties": { "^x-": {} },

      "properties": {
        "name":        { "type": "string" },
        "description": { "type": "string" },
        "seed":        { "type": "integer", "minimum": 0 }
      },

      "title":       "Specification metadata",
      "description": "Human-oriented name, optional description and RNG seed."
    },

    "baseArtifact": {
      "type": "string",
      "format": "uri-reference",
      "description": "Reference to the baseline artifact that factors modify."
    },

    "factors": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/factor" }
    },

    "factorSets": {
      "type": "array",
      "items": { "$ref": "#/$defs/factorSet" }
    }
  },

  "$defs": {
    "namedLockable": {
      "title":       "Named & lockable",
      "description": "Common structure that carries a name plus an optional lock flag.",
      "type":        "object",
      "required":    ["name"],
      "additionalProperties": true,
      "properties": {
        "name": { "type": "string" },
        "lock": { "type": "boolean", "default": false }
      }
    },

    "level": {
      "title":       "Factor level",
      "description": "A single concrete level within a factor.",

      "type": "object",
      "required": ["id", "patchRef", "output_path"],
      "additionalProperties": false,

      "properties": {
        "id":          { "type": "string" },
        "output_path": { "type": "string", "format": "uri-reference" },
        "patchRef":    { "type": "string", "format": "uri-reference" },
        "artifactRef": { "type": "string", "format": "uri-reference" },
        "patchKind": {
          "type": "string",
          "enum": ["git", "json-patch", "json-merge", "yaml-overlay"]
        },
        "replicates": {
          "type": "integer",
          "minimum": 1,
          "default": 1,
          "$comment": "Validators don’t inject defaults; tooling should."
        }
      }
    },

    "factor": {
      "title":       "Factor",
      "description": "Controllable variable with an explicit list of levels.",
      "allOf": [
        { "$ref": "#/$defs/namedLockable" },
        {
          "type": "object",
          "required": ["levels"],
          "properties": {
            "levels": {
              "type": "array",
              "minItems": 1,
              "items": { "$ref": "#/$defs/level" }
            }
          }
        }
      ]
    },

    "factorSet": {
      "title":       "Factor set",
      "description": "Expands factor levels into a Cartesian product.",
      "allOf": [
        { "$ref": "#/$defs/namedLockable" },
        {
          "type": "object",
          "required": ["cartesianProduct", "uriTemplate"],

          "properties": {
            "cartesianProduct": {
              "type": "object",
              "patternProperties": {
                "^.*$": {
                  "type": "array",
                  "minItems": 1,
                  "items": { "type": "string" }
                }
              },
              "additionalProperties": false,
              "description": "Keys are factor names; values are arrays of level IDs."
            },

            "uriTemplate": {
              "type": "string",
              "pattern": ".*\\{.+?\\}.*",
              "description": "URI template referencing cartesianProduct keys."
            },

            "factorFileTemplate": {
              "type": "string"
            }
          }
        }
      ]
    }
  }
}

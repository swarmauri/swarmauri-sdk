sequenceDiagram
    participant User
    participant CLI as peagen eval
    participant Config as Config Loader
    participant Reg as PluginRegistry
    participant Pool as EvaluatorPool
    participant Prog as Program Class
    User ->> CLI: Run `peagen eval <workspace_uri> [--pool PoolName] [options]`
    CLI ->> Config: load_peagen_toml(Path(workspace_uri)) to get evaluation config
    CLI ->> CLI: Determine pool_ref (from --pool or config)
    alt If pool_ref specified
        CLI ->> Reg: Check registry["evaluator_pools"] for pool_ref
        alt found in registry
            Reg -->> CLI: Return Pool Class
        else not found
            CLI ->> Python: Import module and get class for pool_ref string
            Python -->> CLI: Return Pool Class
        end
    else (no pool specified)
        CLI ->> CLI: Use DefaultEvaluatorPool class
    end
    CLI ->> Pool: Instantiate PoolCls and call initialize()
    opt if workspace_uri is remote (contains "://")
        CLI ->> FS: Create temp workspace directory:contentReference[oaicite:177]{index=177}
        CLI ->> CLI: (Future) fetch remote workspace contents (using program fetch helpers)
    end
    CLI ->> FS: Resolve workspace_path (local Path)
    CLI ->> FS: Glob find program files (e.g. `**/*.prog`) in workspace_path
    loop for each program file found
        CLI ->> Prog: Program.from_workspace(program_dir)
        Prog -->> CLI: Return Program object
        CLI ->> CLI: Add Program to list
    end
    CLI ->> Pool: evaluate_programs(list of Program objects)
    Pool -->> CLI: Returns results list (scores & metadata)
    CLI ->> CLI: Build eval manifest (schemaVersion, evaluators, results)
    alt if --json output
        CLI -->> User: Print JSON-formatted eval manifest
    else
        CLI ->> FS: Ensure output directory (default: `<workspace>/.peagen/`)
        CLI ->> FS: Write eval_manifest.json to output directory
        CLI -->> User: Print path to eval_manifest file
    end
    opt if --strict flag
        CLI ->> CLI: "Check all result scores. if any 0, Exit with code 3"
    end

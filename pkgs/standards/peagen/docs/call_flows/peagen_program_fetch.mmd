sequenceDiagram
    participant User
    participant CLI as peagen program fetch
    participant Net as Manifest Source
    participant Pip as PackageInstaller
    participant Adapter as StorageAdapter
    User ->> CLI: Run `peagen program fetch manifest.json [--out dir]`
    CLI ->> FS: Create/prepare output directory (temp if not provided)
    loop For each manifest in inputs
        CLI ->> Net: _download_manifest(manifest URI or path)
        Net -->> CLI: Returns manifest data (JSON)
        alt if install_template_sets flag is true
            CLI ->> Pip: Install each template-set listed in manifest (via pip)
        end
        alt if not no_source
            loop for each spec in manifest["source_packages"]
                CLI ->> Adapter: _materialise_source_pkg(spec, out_dir) (clone or copy source)
            end
        end
        CLI ->> Adapter: _materialise_workspace(manifest, out_dir) (download all generated files)
    end
    CLI -->> User: Output "workspace: [out_dir]" path of reconstructed workspace

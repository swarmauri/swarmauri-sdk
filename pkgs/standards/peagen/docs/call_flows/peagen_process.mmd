sequenceDiagram
    participant User
    participant CLI as peagen process
    participant Config as Config Loader
    participant Reg as PluginRegistry
    participant Store as StorageAdapter
    participant Peagen as Peagen Engine
    participant Pub as Publisher
    User ->> CLI: Run `peagen process projects.yaml [options]`
    CLI ->> Config: load_peagen_toml (load .peagen.toml config)
    CLI ->> Reg: Get plugin mode setting (plugins config)
    CLI ->> Reg: (If --notify) Get Publisher class from registry
    CLI ->> Pub: Instantiate publisher and publish "process.started" event
    CLI ->> Reg: Get Storage Adapter class from registry
    CLI ->> Store: Instantiate storage adapter (with org prefix)
    CLI ->> CLI: Prepare environment (template sets, API key, agent prompt)
    CLI ->> CLI: If --include-swarmauri, add swarmauri source package (git or bundle)
    CLI ->> CLI: materialise_packages (fetch any source_packages to temp dir)
    CLI ->> Peagen: Initialize Peagen(projects_payload, templates, agent_env, storage)
    CLI ->> Peagen: Set logging level based on -v flags
    note over CLI,Peagen: **Dispatch generation**
    alt If --project-name given
        CLI ->> Peagen: load_projects() to get specified project
        Peagen -->> CLI: Returns project data
        CLI ->> Peagen: process_single_project(project, [start_idx/file], transitive?)
    else All projects
    end
    Peagen -->> CLI: Generation completed (files created in workspace)
    CLI ->> User: Log "Done in Xs" upon completion
    CLI ->> Pub: (If publisher) Publish "process.done" event with runtime
    CLI -->> User: Exit (status 0 if successful)

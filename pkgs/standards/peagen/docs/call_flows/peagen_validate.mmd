sequenceDiagram
    participant User
    participant CLI as peagen validate config
    participant Config as Config Loader
    participant Schema as JSONSchema
    User ->> CLI: Run `peagen validate config [path]`
    CLI ->> Config: load_peagen_toml(path or cwd)
    Config -->> CLI: Return config dict or None
    alt if no config found
        CLI -->> User: "❌ No .peagen.toml found." (error)
        CLI -->> User: Exit with error
    else
        CLI ->> Schema: _validate(config, PEAGEN_TOML_V1_SCHEMA, ".peagen.toml")
        Schema -->> CLI: Validate or raise errors
        alt if errors in config
            CLI -->> User: Print each schema error ("<path> – <message>")
            CLI -->> User: Exit with error
        else
            CLI -->> User: Print "✅ .peagen.toml is valid." (passes schema)
        end
    end

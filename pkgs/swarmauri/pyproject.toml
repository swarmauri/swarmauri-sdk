[project]
name = "swarmauri"
version = "0.6.2.dev3"
description = "Namespace package for components, packages, and plugins within the Swarmauri framework."
authors = ["Jacob Stewart <jacob@swarmauri.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "http://github.com/swarmauri/swarmauri-sdk"
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

requires-python = ">=3.10,<3.13"

[tool.uv.dependencies]
dependencies = [
  "swarmauri_core",
  "swarmauri_base",
  "swarmauri_standard",
  "toml >=0.10.2",
  "httpx >=0.27.0",
  "pydantic >=2.9.2",
  "typing_extensions",
  # First Class Citizens
  "swarmauri_vectorstore_doc2vec",
  "swarmauri_embedding_doc2vec",
  "swarmauri_embedding_tfidf",
  "swarmauri_embedding_nmf",
  "swarmauri_tool_matplotlib",
  "swarmauri_parser_keywordextractor",
  "swarmauri_parser_beautifulsoupelement",
  "swarmauri_vectorstore_tfidf",
  "swarmauri_distance_minkowski",
]


[tool.uv.sources]
swarmauri_core = { workspace = true }
swarmauri_base = { workspace = true }
swarmauri_standard = { workspace = true }
swarmauri_vectorstore_doc2vec = { workspace = true }
swarmauri_embedding_doc2vec = { workspace = true }
swarmauri_embedding_tfidf = { workspace = true }
swarmauri_embedding_nmf = { workspace = true }
swarmauri_tool_matplotlib = { workspace = true }
swarmauri_parser_keywordextractor = { workspace = true }
swarmauri_parser_beautifulsoupelement = { workspace = true }
swarmauri_vectorstore_tfidf = { workspace = true }
swarmauri_distance_minkowski = { workspace = true }


[tool.uv.packages]
namespace_packages = ["swarmauri"]

[tool.uv.extras]
# First Class Extras
vectorstore_doc2vec = ["swarmauri_vectorstore_doc2vec"]
vectorstore_tfidf = ["swarmauri_vectorstore_tfidf"]

parser_keywordextractor = ["swarmauri_parser_keywordextractor"]
parser_beautifulsoupelement = ["swarmauri_parser_beautifulsoupelement"]

embedding_doc2vec = ["swarmauri_embedding_doc2vec"]
embedding_tfidf = ["swarmauri_embedding_tfidf"]
embedding_nmf = ["swarmauri_embedding_nmf"]

distance_minkowski = ["swarmauri_distance_minkowski"]

tool_matplotlib = ["swarmauri_tool_matplotlib"]

full = [
  "swarmauri_vectorstore_doc2vec",
  "swarmauri_vectorstore_tfidf",
  "swarmauri_parser_keywordextractor",
  "swarmauri_parser_beautifulsoupelement",
  "swarmauri_embedding_doc2vec",
  "swarmauri_embedding_tfidf",
  "swarmauri_embedding_nmf",
  "swarmauri_distance_minkowski",
  "swarmauri_tool_matplotlib",
]

[tool.uv.group.dev.dependencies]
flake8 = "^7.0"
pytest = "^8.0"
pytest-xdist = "^3.6.1"
pytest-asyncio = ">=0.24.0"
pytest-timeout = "^2.3.1"
pytest-json-report = "^1.5.0"
python-dotenv = "^1.0.0"
jsonschema = "^4.18.5"
ipython = "^8.28.0"
requests = "^2.32.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
#norecursedirs = ["combined", "scripts"]
asyncio_mode = "auto"

markers = [
  "test: standard test",
  "unit: Unit tests",
  "integration: Integration tests",
  "acceptance: Acceptance tests",
  "experimental: Experimental tests",
  "timeout: mark test to timeout after X seconds",
]

log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_default_fixture_loop_scope = "function"
